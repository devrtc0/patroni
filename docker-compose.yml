networks:
  pgnet:
    driver: bridge

services:
  etcd:
    container_name: etcd
    image: bitnami/etcd:3.5
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - "2379:2379"
      - "2380:2380"
    networks:
      - pgnet
    healthcheck:
      test: [ "CMD-SHELL", "etcdctl --cluster=true endpoint health || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
      start_interval: 1s

  haproxy:
    container_name: haproxy
    image: haproxy:alpine
    ports:
      - "5000:5000"
      - "5001:5001"
      - "7000:7000"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - pgnet
    depends_on:
      - pg_coord
    healthcheck:
      test: wget 127.0.0.1:7000 -O /dev/null -q || echo 1
      start_period: 10s
      start_interval: 1s
      interval: 5s
      timeout: 2s
      retries: 5

  pg_coord: &pg_base
    build:
      context: ./db/
    environment: &pg_env
      NAME_PREFIX: coord
      POST_INIT_PATH: /tmp/init.sh
    deploy:
      replicas: 3
    volumes:
      - ./patroni.yml:/etc/patroni/patroni.yml:ro
      - ./db/init.sh:/var/lib/postgresql/init.sh:ro
    networks:
      - pgnet
    depends_on:
      etcd:
        condition: service_healthy
    healthcheck:
      test: pg_isready -U postgres
      start_period: 10s
      start_interval: 1s
      interval: 5s
      timeout: 2s
      retries: 5
  pg_worker1:
    <<: *pg_base
    environment:
      <<: *pg_env
      NAME_PREFIX: worker1
      PATRONI_CITUS_GROUP: 1
  pg_worker2:
    <<: *pg_base
    environment:
      <<: *pg_env
      NAME_PREFIX: worker2
      PATRONI_CITUS_GROUP: 2
  pg_worker3:
    <<: *pg_base
    environment:
      <<: *pg_env
      NAME_PREFIX: worker3
      PATRONI_CITUS_GROUP: 3
